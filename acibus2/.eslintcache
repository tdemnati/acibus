[{"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\index.tsx":"1","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\reportWebVitals.ts":"2","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\App.tsx":"3","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\RadioTag.tsx":"4","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Providers\\TagProvider.tsx":"5","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\ToggleEditTag.tsx":"6","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Providers\\ContentProvider.tsx":"7","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\AnnotateText.tsx":"8","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\StructuredContentList.tsx":"9","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\Save.tsx":"10","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\index.ts":"11","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\TokenAnnotator.tsx":"12","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\utils.ts":"13","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\Mark.tsx":"14","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\UpdateStructuredContent.tsx":"15","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\SaveButton.tsx":"16"},{"size":890,"mtime":1640816467612,"results":"17","hashOfConfig":"18"},{"size":440,"mtime":1640118757128,"results":"19","hashOfConfig":"18"},{"size":2435,"mtime":1641240599621,"results":"20","hashOfConfig":"18"},{"size":1664,"mtime":1641241011358,"results":"21","hashOfConfig":"18"},{"size":1668,"mtime":1641157840887,"results":"22","hashOfConfig":"18"},{"size":461,"mtime":1640118757125,"results":"23","hashOfConfig":"18"},{"size":3399,"mtime":1640980517646,"results":"24","hashOfConfig":"18"},{"size":1252,"mtime":1640118757123,"results":"25","hashOfConfig":"18"},{"size":2458,"mtime":1640725022259,"results":"26","hashOfConfig":"18"},{"size":463,"mtime":1640118757124,"results":"27","hashOfConfig":"18"},{"size":58,"mtime":1640118757121,"results":"28","hashOfConfig":"18"},{"size":2741,"mtime":1640118757120,"results":"29","hashOfConfig":"18"},{"size":2052,"mtime":1640118757121,"results":"30","hashOfConfig":"18"},{"size":632,"mtime":1640118757120,"results":"31","hashOfConfig":"18"},{"size":4192,"mtime":1640728252335,"results":"32","hashOfConfig":"18"},{"size":2442,"mtime":1640980827552,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"231tsb",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\index.tsx",[],["73","74"],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\reportWebVitals.ts",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\App.tsx",["75","76","77","78","79","80","81"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react';\r\nimport './App.css';\r\nimport {TagProvider} from './Providers/TagProvider';\r\nimport {ContentProvider} from './Providers/ContentProvider';\r\n\r\nimport ToggleEditTag from './Components/ToggleEditTag';\r\nimport RadioTag from './Components/RadioTag';\r\nimport AnnotateText from './Components/AnnotateText';\r\nimport StructuredContentList from './Components/StructuredContentList';\r\nimport UpdateStructuredContent from './Components/UpdateStructuredContent';\r\nimport Save from './Components/Save';\r\nimport Save2 from './Components/SaveButton';\r\nimport SaveButton from './Components/SaveButton';\r\nimport { Dropdown, DropdownButton, FormControl, InputGroup } from 'react-bootstrap';\r\n\r\nconst Card = ({children}) => (\r\n  <div\r\n    style={{\r\n      boxShadow: '0 2px 4px rgba(0,0,0,.1)',\r\n      margin: 6,\r\n      padding: 16,\r\n      backgroundColor: 'white',\r\n      width: 500,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n)\r\n\r\nclass App extends React.Component<any, any> {\r\n\r\n  render() {\r\n\r\n    return (\r\n      \r\n    <div>\r\n\r\n      <ContentProvider>\r\n      <TagProvider>\r\n      <div id=\"wrapper\">\r\n        <div id=\"sidebar\">\r\n          <div id=\"title\">\r\n          <h2 style={{marginTop:'0px', paddingTop:'20px'}}><a href=\"http://a-cibus.com\">ACIBUS</a></h2>\r\n          </div>\r\n          <div className=\"section\">\r\n          <h3>PROJECT</h3>\r\n          <div className=\"settings\">\r\n          <p className=\"settingsLabel\">Select project</p>\r\n\r\n          </div>\r\n          <div className=\"settings\">\r\n          <p className=\"settingsLabel\">Edit tags</p>\r\n          <ToggleEditTag/>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <h3>MY CONTENT</h3>\r\n            <ul>\r\n              <StructuredContentList structuredContentId={undefined}/>\r\n            </ul>\r\n          </div>\r\n          <div className=\"section\">\r\n          \r\n          <h3>SETTINGS</h3>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"main\">\r\n          <Card>\r\n            <h4>Choose a Tag</h4>\r\n            <RadioTag/>\r\n          </Card>\r\n          <Card>\r\n            <h4>Annotate Text</h4>\r\n            <AnnotateText/>\r\n          </Card>\r\n          <Card>\r\n            <h4>Save</h4>\r\n            <SaveButton/>\r\n          </Card>\r\n        </div>\r\n        </div>\r\n      </TagProvider>\r\n      </ContentProvider>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\RadioTag.tsx",["82","83","84","85","86"],"import * as React from 'react';\r\nimport TagContext from '../Providers/TagProvider';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, ButtonGroup, CloseButton, Dropdown, DropdownButton, FormControl, InputGroup, ToggleButton } from 'react-bootstrap';\r\n\r\n\r\nclass RadioTag extends React.Component{\r\n    \r\n    render() {\r\n        return (\r\n        <TagContext.Consumer>\r\n                    {(context)=> (\r\n                        <div>\r\n                        {context.state.tagList.map(({tag}, idx) => (\r\n                            <ButtonGroup key={idx}>\r\n                            <ToggleButton\r\n                                type=\"radio\"\r\n                                value={tag}\r\n                                onChange={context.onSelectTag}\r\n                                checked={context.state.tag===tag}\r\n                                color={context.state.color}>{tag}</ToggleButton>\r\n                            {context.state.isEditTag ? \"\": <CloseButton value={tag} onClick={context.deleteItem}></CloseButton>}\r\n                            </ButtonGroup>\r\n                        ))}\r\n                        <br/>\r\n                        {context.state.isEditTag ? \"\": <div>\r\n                        <input type=\"text\" onChange={context.onInputChange}/>\r\n                        <button onClick={context.addTag}>Add</button>\r\n                        <button onClick={context.resetTag}>Reset</button>\r\n                        </div>}\r\n                   \r\n                        </div> \r\n                        \r\n                    )}\r\n        </TagContext.Consumer>\r\n    )\r\n    }\r\n    \r\n  }\r\n  \r\n  export default RadioTag","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Providers\\TagProvider.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\ToggleEditTag.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Providers\\ContentProvider.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\AnnotateText.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\StructuredContentList.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\Save.tsx",["87"],"import * as React from 'react';\r\nimport TagContext from '../Providers/TagProvider';\r\nimport ContentContext from '../Providers/ContentProvider';\r\n\r\n\r\nclass Save extends React.Component{\r\n    render() {\r\n        return (\r\n        <ContentContext.Consumer>\r\n          {(contentcontext)=> (\r\n              <p>{JSON.stringify([...contentcontext.state.value], null, 2)}</p>    \r\n        )}\r\n        </ContentContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Save",["88","89"],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\index.ts",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\TokenAnnotator.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\utils.ts",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Annotator\\Mark.tsx",[],"C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\UpdateStructuredContent.tsx",["90"],"import React from \"react\";\r\nimport { gql } from \"@apollo/client\";\r\nimport { graphql, ChildProps } from \"@apollo/react-hoc\";\r\nimport ContentContext from '../Providers/ContentProvider';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst UPDATE_STRUCTURED_CONTENTS = gql`\r\nmutation{\r\n  updateStructuredContent(\r\n    structuredContentId:67320,\r\n    structuredContent:{\r\n    contentStructureId:66167,\r\n    title:\"Jimmy Fallon\",\r\n    friendlyUrlPath: \"wc1\",\r\n    contentFields:[{\r\n      name:\"text\",\r\n      contentFieldValue:{\r\n        data:\"James Fallon is an American comedian, television host, and actor. He is known for his work in television as a cast member on Saturday Night Live and as the host of late-night talk show The Tonight Show Starring Jimmy Fallon and before that Late Night with Jimmy Fallon.\"\r\n      }\r\n    },\r\n      {\r\n        name:\"FieldsGroup13487557\"\r\n        contentFieldValue:{\r\n          data:null\r\n        },\r\n        nestedContentFields:[{\r\n      name:\"start\",\r\n      contentFieldValue:{\r\n        data:\"0\"\r\n      }\r\n      },\r\n      {\r\n      name:\"end\",\r\n      contentFieldValue:{\r\n        data:\"2\"\r\n      }\r\n      },\r\n        {\r\n      name:\"tag\",\r\n      contentFieldValue:{\r\n        data:\"SBJ\"\r\n      }\r\n      },\r\n        {\r\n      name:\"color\",\r\n      contentFieldValue:{\r\n        data:\"#ffe184\"\r\n      }\r\n      },  \r\n      {\r\n        name:\"FieldsGroup30533882\"\r\n        contentFieldValue:{\r\n          data:null\r\n        },\r\n        nestedContentFields:[{\r\n      name:\"token\",\r\n      contentFieldValue:{\r\n        data:\"James\"\r\n      }\r\n        },\r\n          {\r\n      name:\"token\",\r\n      contentFieldValue:{\r\n        data:\"Fallon\"\r\n      }\r\n          }\r\n      ]  \r\n      }\r\n    ]  \r\n      },\r\n      {\r\n        name:\"FieldsGroup13487557\"\r\n        contentFieldValue:{\r\n          data:null\r\n        },\r\n        nestedContentFields:[{\r\n      name:\"start\",\r\n      contentFieldValue:{\r\n        data:\"2\"\r\n      }\r\n      },\r\n      {\r\n      name:\"end\",\r\n      contentFieldValue:{\r\n        data:\"3\"\r\n      }\r\n      },\r\n        {\r\n      name:\"tag\",\r\n      contentFieldValue:{\r\n        data:\"REL\"\r\n      }\r\n      },\r\n        {\r\n      name:\"color\",\r\n      contentFieldValue:{\r\n        data:\"green\"\r\n      }\r\n      },  \r\n      {\r\n        name:\"FieldsGroup30533882\"\r\n        contentFieldValue:{\r\n          data:null\r\n        },\r\n        nestedContentFields:[{\r\n      name:\"token\",\r\n      contentFieldValue:{\r\n        data:\"is\"\r\n      }\r\n        }\r\n      ]  \r\n      }\r\n    ]  \r\n      }\r\n      \r\n    ]\r\n  }) {\r\nid,\r\n    contentStructureId,\r\n    title,\r\n    contentFields{\r\n      name\r\n    contentFieldValue{\r\n      data\r\n    }\r\n      nestedContentFields{\r\n        name\r\n        contentFieldValue{\r\n          data\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\n \r\n  type InputProps = {\r\n    structuredContentId: string\r\n  };\r\n\r\n  type UpdateStructuredContent = {\r\n    id: number;\r\n    contentStructureId: number;\r\n    title: String\r\n    contentFields: [ContentFields]\r\n  }\r\n  \r\n  type Response = {\r\n    updateStructuredContent: UpdateStructuredContent;\r\n  }\r\n  \r\n  type ContentFields = {\r\n    name: String;\r\n    contentFieldValue: ContentFieldValue;\r\n    nestedContentFields: [NestedContentFields];\r\n  }\r\n  \r\n  type ContentFieldValue = {\r\n    data: string;\r\n  }\r\n\r\n  type NestedContentFields = {\r\n    contentFieldValue: ContentFieldValue;\r\n  }\r\n\r\nconst withUpdateContent = graphql<InputProps, Response>(UPDATE_STRUCTURED_CONTENTS, {\r\n  options: ({ structuredContentId }) => ({\r\n    variables: { structuredContentId }\r\n  }\r\n  )\r\n}\r\n  );\r\n\r\nclass UpdateContent extends React.Component<ChildProps<InputProps, Response>, {}> {\r\n\r\n  onClick() {\r\n    this.props.mutate()\r\n      .then(({ data }) => {\r\n        console.log('got data', data);\r\n      }).catch((error) => {\r\n        console.log('there was an error sending the query', error);\r\n      });\r\n  }\r\n\r\n  render(){\r\n\r\n\r\n    return (\r\n\r\n      <ContentContext.Consumer>\r\n      \r\n      {(contentcontext)=> (\r\n        \r\n      <div>\r\n        <button onClick={this.onClick.bind(this)}>Accept</button>\r\n          </div>\r\n          )\r\n          }\r\n      </ContentContext.Consumer>\r\n      \r\n        )\r\n  }\r\n}\r\n\r\nexport default withUpdateContent(UpdateContent)","C:\\Users\\TDEMNATI\\OneDrive - Nagarro ES GmbH\\Desktop\\A-cibus\\acibus\\acibus2\\src\\Components\\SaveButton.tsx",["91","92","93"],"import * as React from 'react';\r\nimport TagContext from '../Providers/TagProvider';\r\nimport ContentContext from '../Providers/ContentProvider';\r\nimport { useContext } from 'react';\r\nimport { gql, useMutation } from '@apollo/react-hoc';\r\n\r\n\r\n \r\n\r\nfunction SaveButton() {\r\n    const myContext = useContext(ContentContext);\r\n    let formatedValue ='';\r\n    let myValue = myContext.state.value;\r\n    let myText = myContext.state.TEXT;\r\n    let myID = myContext.state.StructuredContentID;\r\n    formatedValue+=`\r\n    contentFields: [\r\n    {\r\n      name: \"text\"\r\n      contentFieldValue: {\r\n        data: \"`+myText+`\"\r\n      }\r\n    }`;\r\n\r\n  myValue.map(value => {\r\n    formatedValue+=`\r\n            {\r\n    name: \"FieldsGroup13487557\"\r\n    contentFieldValue: { data: null }\r\n    nestedContentFields: [\r\n  {name:\"start\",contentFieldValue:{data:\"${value.start}\"}}\r\n  {name:\"end\",contentFieldValue:{data:\"${value.end}\"}}\r\n  {name:\"tag\",contentFieldValue:{data:\"${value.tag}\"}}\r\n  {name:\"color\",contentFieldValue:{data:\"${value.color}\"}}  \r\n  {\r\n    name:\"FieldsGroup30533882\"\r\n    contentFieldValue: { data: null }\r\n    nestedContentFields:[`\r\n      value.tokens.map(token=> (\r\n        formatedValue+=`{name:\"token\",contentFieldValue:{data:\"`+ token+ `\"}}`));formatedValue+=`]\r\n      }\r\n    ]\r\n  }`});\r\n  \r\n  formatedValue+=`\r\n]`;\r\n      \r\n\r\n    console.log(formatedValue);\r\n    const UPDATE_STRUCTURED_CONTENT = gql`\r\n    mutation {\r\n      updateStructuredContent(\r\n        structuredContentId: ${myID}\r\n        structuredContent: {\r\n          contentStructureId: 66167\r\n          title: \"My Content\"\r\n          ${formatedValue}\r\n        }\r\n      ) {\r\n        id\r\n        contentStructureId\r\n        title\r\n        contentFields {\r\n          name\r\n          contentFieldValue {\r\n            data\r\n          }\r\n          nestedContentFields {\r\n            name\r\n            contentFieldValue {\r\n              data\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n`;\r\n\r\n    const [updateStructuredContent, {data, loading, error}] = useMutation(UPDATE_STRUCTURED_CONTENT);\r\n\r\n    if (loading) return <p>Submitting...</p>;\r\n    if (error) return <p>Submission error! ${error.message}</p>;\r\n\r\n    return (\r\n      <>\r\n        <p>{JSON.stringify([...myContext.state.value], null, 2)}</p>\r\n        <button onClick={() => {\r\n          updateStructuredContent();\r\n        }}>Accept</button>\r\n      </>\r\n      \r\n    );\r\n  }\r\n\r\nexport default SaveButton\r\n\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":31},{"ruleId":"98","severity":1,"message":"102","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":12},{"ruleId":"98","severity":1,"message":"103","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":13},{"ruleId":"98","severity":1,"message":"104","line":15,"column":10,"nodeType":"100","messageId":"101","endLine":15,"endColumn":18},{"ruleId":"98","severity":1,"message":"105","line":15,"column":20,"nodeType":"100","messageId":"101","endLine":15,"endColumn":34},{"ruleId":"98","severity":1,"message":"106","line":15,"column":36,"nodeType":"100","messageId":"101","endLine":15,"endColumn":47},{"ruleId":"98","severity":1,"message":"107","line":15,"column":49,"nodeType":"100","messageId":"101","endLine":15,"endColumn":59},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":16},{"ruleId":"98","severity":1,"message":"104","line":4,"column":44,"nodeType":"100","messageId":"101","endLine":4,"endColumn":52},{"ruleId":"98","severity":1,"message":"105","line":4,"column":54,"nodeType":"100","messageId":"101","endLine":4,"endColumn":68},{"ruleId":"98","severity":1,"message":"106","line":4,"column":70,"nodeType":"100","messageId":"101","endLine":4,"endColumn":81},{"ruleId":"98","severity":1,"message":"107","line":4,"column":83,"nodeType":"100","messageId":"101","endLine":4,"endColumn":93},{"ruleId":"98","severity":1,"message":"109","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"94","replacedBy":"110"},{"ruleId":"96","replacedBy":"111"},{"ruleId":"98","severity":1,"message":"112","line":5,"column":16,"nodeType":"100","messageId":"101","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"109","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":25,"column":21,"nodeType":"115","messageId":"116","endLine":25,"endColumn":23},{"ruleId":"98","severity":1,"message":"117","line":79,"column":38,"nodeType":"100","messageId":"101","endLine":79,"endColumn":42},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"@typescript-eslint/no-unused-vars","'UpdateStructuredContent' is defined but never used.","Identifier","unusedVar","'Save' is defined but never used.","'Save2' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'Button' is defined but never used.","'TagContext' is defined but never used.",["118"],["119"],"'uuidv4' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]